# -*- coding: utf-8 -*-
"""chatbot_studyplanner.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nPb6MrKoISeAccp8i8G7C_BE35yzIAuY

Install the required packages.
"""

# First cell - Install dependencies
!pip install langchain-google-genai ipywidgets google-generativeaiprint("Dependencies Installed Successfully!")

"""Import the required modules."""

import os
from IPython.display import display, HTML, clear_output
import ipywidgets as widgets
from langchain_google_genai import ChatGoogleGenerativeAI
import google.generativeai as genai
print("Nodules imported successfully!")

class NotebookStudyPlanner:
    def __init__(self, api_key):
        # Configure API
        os.environ["GOOGLE_API_KEY"] = api_key
        genai.configure(api_key=api_key)
        self.llm = ChatGoogleGenerativeAI(model="gemini-1.5-flash")

        # Initialize chat history
        self.history = []

        # Create widgets
        self.tool_dropdown = widgets.Dropdown(
            options=['Create Study Schedule', 'Subject Analysis',
                    'Time Management Tips', 'Resource Recommendations'],
            description='Tool:',
            style={'description_width': 'initial'}
        )

        self.input_text = widgets.Text(
            placeholder='Enter your request...',
            description='Request:',
            style={'description_width': 'initial'},
            layout=widgets.Layout(width='70%')
        )

        self.submit_button = widgets.Button(
            description='Submit',
            button_style='primary'
        )

        self.output_area = widgets.Output()

        # Set up button click handler
        self.submit_button.on_click(self.handle_submit)

        # Display interface
        self.setup_interface()

    def setup_interface(self):
        # Title
        display(HTML("<h2>ðŸŽ“ Study Planner Assistant</h2>"))

        # Display widgets
        display(widgets.VBox([
            widgets.HTML('<h4>Select a tool and enter your request:</h4>'),
            self.tool_dropdown,
            widgets.HBox([self.input_text, self.submit_button]),
            self.output_area
        ]))

    def handle_submit(self, button):
        with self.output_area:
            clear_output()

            # Get input values
            tool = self.tool_dropdown.value
            user_input = self.input_text.value

            if not user_input.strip():
                print("Please enter a request.")
                return

            # Create prompt
            prompt = f"""Tool selected: {tool}
User request: {user_input}

As a study planning assistant, provide specific, actionable advice relevant to the selected tool.
If creating a schedule, include specific time blocks.
If analyzing a subject, break down key concepts and learning approaches.
If providing time management tips, include concrete techniques.
If recommending resources, suggest specific types of materials."""

            # Get response
            response = self.llm.invoke(prompt)

            # Add to history
            self.history.append({"role": "user", "content": f"Tool: {tool}\nRequest: {user_input}"})
            self.history.append({"role": "assistant", "content": response.content})

            # Display chat history
            print("ðŸ’¬ Chat History:\n")
            for message in self.history:
                if message["role"] == "user":
                    print(f"ðŸ™‹ You: {message['content']}\n")
                else:
                    print(f"ðŸ¤– Assistant: {message['content']}\n")
                print("-" * 80 + "\n")

            # Clear input
            self.input_text.value = ''

"""Add Google API key."""

from google.colab import userdata
api_key=userdata.get('GOOGLE_API_KEY')
planner = NotebookStudyPlanner(api_key)